% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{rnorm}
\alias{rnorm}
\title{Generate Gaussian Random Numbers using GPU}
\usage{
rnorm(n, mean = 0, sd = 1, dp = FALSE, nthread = 32)
}
\arguments{
\item{n}{numbers of observation. This accepts only one integer}

\item{mean}{a mean. This accepts only one double/numeric.}

\item{sd}{a standard deviation. This accepts only one double/numeric.}

\item{dp}{whether calculate using double precision. Default is FALSE.}

\item{nthread}{number of threads launched per block.}
}
\value{
a double vector
}
\description{
This function generates random numbers using GPU from a normal distribution.
}
\examples{
n <- 2^20
dat1 <- gpda::rnorm(n)
dat2 <- stats::rnorm(n)
den1 <- density(dat1)
den2 <- density(dat2)

## Identical 
par(mfrow=c(1,2))
hist(dat2, breaks="fd", freq=F)
lines(den1$x, den1$y,lwd=2)
hist(dat1, breaks="fd", freq=F)
lines(den2$x, den2$y,lwd=2)
par(mfrow=c(1,1))

## require(microbenchmark)
## res <- microbenchmark(gpda::rnorm(n, dp=TRUE), gpda::rnorm(n, dp=FALSE),
##                       stats::rnorm(n), times=100L)
## Unit: milliseconds
##                        expr      min        lq      mean    median        uq
## gpda::rnorm(n, dp = TRUE)   6.616550  6.845842  7.452962  6.978157  7.537696
## gpda::rnorm(n, dp = FALSE)  4.002644  4.140652  4.479556  4.258824  4.752049
##            stats::rnorm(n) 58.169916 58.236266 59.341414 58.283129 58.880208
##       max neval cld
## 34.97274   100    b 
## 11.70719   100    a  
## 80.32002   100    c
}
