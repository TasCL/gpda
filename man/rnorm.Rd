% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{rnorm}
\alias{rnorm}
\title{Generate Gaussian Random Numbers with GPU}
\usage{
rnorm(n, mean = 0, sd = 1, nThread = 32)
}
\arguments{
\item{n}{number of observations. This accepts only one integer}

\item{mean}{a mean. This accepts only one double/numeric.}

\item{sd}{a standard deviation. This accepts only one double/numeric.}

\item{nThread}{number of threads launched per block.}
}
\value{
a double vector
}
\description{
This function generates random numbers using GPU from a normal distribution.
}
\examples{
n <- 1e5
dat1 <- gpda::rnorm(n)
dat2 <- stats::rnorm(n)
den1 <- density(dat1)
den2 <- density(dat2)

## Identical 
par(mfrow=c(1,2))
hist(dat2, breaks="fd", freq=F)
lines(den1$x, den1$y,lwd=2)
hist(dat1, breaks="fd", freq=F)
lines(den2$x, den2$y,lwd=2)
par(mfrow=c(1,1))

## require(microbenchmark)
## res <- microbenchmark(gpda::rnorm(n), stats::rnorm(n), times=10L)
## Unit: milliseconds
##           expr      min       lq     mean   median       uq      max neval 
## gpda::rnorm(n) 1.337829 1.352705 1.858909 1.385913 1.570951 5.861834    10  
## stats::rnorm(n) 6.191541 6.197897 6.213164 6.213855 6.220036 6.251044   10 
}
