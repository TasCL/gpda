% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{runif_gpu}
\alias{runif_gpu}
\title{Generate Uniform Random Numbers Using GPU}
\usage{
runif_gpu(n, min = 0, max = 1, nthread = 32, dp = FALSE)
}
\arguments{
\item{n}{numbers of observation. This must be a scalar.}

\item{min}{lower bound of the uniform distribution. Must be finite. 
This must be a scalar.}

\item{max}{upper bound of the uniform distribution. Must be finite. 
This must be a scalar.}

\item{nthread}{number of threads launched per block.}

\item{dp}{whether calculate using double precision. Default is FALSE.}
}
\value{
a double vector
}
\description{
This function generates uniform random numbers using GPU.
}
\examples{
n <- 2^20
dat1 <- gpda::runif(n)
dat2 <- stats::runif(n)
den1 <- density(dat1)
den2 <- density(dat2)

## Identical result
par(mfrow=c(1,2))
hist(dat2, breaks="fd", freq=FALSE, ylim=c(0,1.1))
lines(den1$x, den1$y,lwd=2)
hist(dat1, breaks="fd", freq=FALSE, ylim=c(0,1.1))
lines(den2$x, den2$y,lwd=2)
par(mfrow=c(1,1))

## require(microbenchmark)
## res <- microbenchmark(gpda::runif(n, dp=FALSE), gpda::runif(n, dp=TRUE),
##                       stats::runif(n), times=100L)
## Unit: milliseconds
##                        expr       min        lq      mean    median        uq
##  gpda::runif(n, dp = FALSE)  3.960948  4.710212  5.179495  4.877518  5.310155
##  gpda::runif(n, dp = TRUE)   5.876643  6.592802  7.122335  6.731998  6.957797
##             stats::runif(n) 23.213792 23.983485 24.776863 24.022213 24.789670
##       max neval cld
##  28.70379   100   a  
##  31.85638   100   b 
##  49.04686   100   c
}
