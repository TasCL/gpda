% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{rlba}
\alias{rlba}
\alias{rlba_n1}
\title{The Random Number Generator of the Basic Linear Ballistic Accumulation Model}
\usage{
rlba(n, b = 1, A = 0.5, mean_v = c(2.4, 1.6), sd_v = c(1, 1),
  t0 = 0.5, nthread = 32, dp = FALSE)

rlba_n1(n, b = 1, A = 0.5, mean_v = c(2.4, 1.6), sd_v = c(1, 1),
  t0 = 0.5, nthread = 32, dp = FALSE)
}
\arguments{
\item{n}{number of observations. This accepts only integer}

\item{b}{upper bound. (b-A/2) is response caution.}

\item{A}{starting point interval or evidence in accumulator before
beginning of decision process. Start point varies from trial to trial in
the interval [0, A]. Average amount of evidence before evidence
accumulation across trials is A/2.}

\item{mean_v}{drift rate means. This must be a vector of 2 values.}

\item{sd_v}{drift rate standard deviations. Ditto.}

\item{t0}{non-decision times. Must be a scalar.}

\item{dp}{whether calculate using double precision. Default is FALSE.}

\item{nthreads}{number of threads launched per block.}
}
\value{
a data frame with first column named RT and second column named R.
}
\description{
This function generates two-accumulator LBA random numbers using GPU.
}
\examples{
rm(list=ls())
n <- 2^20
dat1 <- gpda::rlba(n, nthread=64); 
dat2 <- cpda::rlba_test(n)
dat3 <- rtdists::rLBA(n, b=1, A=.5, mean_v=c(2.4, 1.6), sd_v=c(1, 1), t0=.5, silent=TRUE)
names(dat3) <- c("RT","R")

## Trim ----
sum(dat1$RT>5); sum(dat2$RT>5); sum(dat3$RT>5)

dat1 <- dat1[dat1$RT < 5, ]
dat2 <- dat2[dat2$RT < 5, ]
dat3 <- dat3[dat3$RT < 5, ]

dat1c <- dat1[dat1[,2]==1, 1]
dat1e <- dat1[dat1[,2]==2, 1]
dat2c <- dat2[dat2[,2]==1, 1]
dat2e <- dat2[dat2[,2]==2, 1]
dat3c <- dat3[dat3[,2]==1, 1]
dat3e <- dat3[dat3[,2]==2, 1]

den1c <- density(dat1c)
den2c <- density(dat2c)
den3c <- density(dat3c)
den1e <- density(dat1e)
den2e <- density(dat2e)
den3e <- density(dat3e)

## Identical PDFs
par(mfrow=c(1,3))
hist(dat1c, breaks="fd",  col="grey", freq=FALSE, xlab="RT (s)", 
  main="GPU-Choice 1", xlim=c(0, 3)) ## gpu float
lines(den2c, col="red",  lty="dashed",  lwd=1.5) ## cpu
lines(den3c, col="blue", lty="dashed",  lwd=3.0) ## rtdists

hist(dat2c, breaks="fd",  col="grey", freq=FALSE, xlab="RT (s)", 
  main="CPU-Choice 1", xlim=c(0, 3)) ## cpu 
lines(den1c, col="red",  lty="dashed",  lwd=1.5) ## gpu float
lines(den3c, col="blue", lty="dashed",  lwd=3.0) ## rtdists

hist(dat3c, breaks="fd",  col="grey", freq=FALSE, xlab="RT (s)", 
  main="R-Choice 1", xlim=c(0, 3)) ## rtdists
lines(den1c, col="red",  lty="dashed",  lwd=1.5) ## gpu float
lines(den2c, col="blue", lty="dashed",  lwd=3.0) ## cpu
par(mfrow=c(1,1))

plot(den1c$x, den1c$y, type="l")
lines(den1e$x, den1e$y)

lines(den2c$x, den2c$y, col="red", lwd=2, lty="dotted")
lines(den2e$x, den2e$y, col="red", lwd=2, lty="dotted")

lines(den3c$x, den3c$y, col="blue", lwd=2, lty="dashed")
lines(den3e$x, den3e$y, col="blue", lwd=2, lty="dashed")

plot(den1c$x, den1c$y, type="l")
lines(den1e$x, den1e$y)

lines(den2c$x, den2c$y, col="red", lwd=2, lty="dotted")
lines(den2e$x, den2e$y, col="red", lwd=2, lty="dotted")

lines(den3c$x, den3c$y, col="blue", lwd=2, lty="dashed")
lines(den3e$x, den3e$y, col="blue", lwd=2, lty="dashed")


library(microbenchmark)
res <- microbenchmark(gpda::rlba(n, dp=F),
                      gpda::rlba(n, dp=T),
                      cpda::rlba_test(n),
                      rtdists::rLBA(n, b=1, A=.5, mean_v=c(2.4, 1.6),
sd_v=c(1, 1), t0=.5, silent=TRUE), times=10L)

## Unit: milliseconds
##                  expr            min           lq         mean       median           uq         max neval cld
## gpda::rlba(n, dp = F)       8.310137     8.465464     9.171308     8.529089     9.213674    11.58632    10   a
## gpda::rlba(n, dp = T)      11.860449    11.955713    12.313426    12.061767    12.169148    14.85524    10   a
## cpda::rlba_test(n)        201.833239   202.047791   209.318144   202.836404   225.028719   225.71750    10   b
## rtdists::rLBA(n,  . )   13521.669045 13614.740048 13799.592982 13770.777719 13919.770909 14177.51434    10   c

rm(list=ls())
n <- 2^20; n
dat1 <- gpda::rlba_n1(n, nthread=64, dp=T); str(dat1)
dat2 <- gpda::rlba_n1(n, nthread=64, dp=F); str(dat2)

res <- microbenchmark(
gpda::rlba_n1(n, dp=F),
gpda::rlba_n1(n, dp=T), times=10L)

res
## Unit: milliseconds
##                     expr       min        lq     mean   median       uq
## gpda::rlba_n1(n, dp = F)  9.572601  9.949197 17.33809 10.82227 11.41039
## gpda::rlba_n1(n, dp = T) 13.774382 14.742762 21.77835 15.07504 15.45775
##      max neval cld
## 44.93433    10   a
## 49.63786    10   a

}
